---
title: "Assignment_1"
format: html
editor: visual
---

```{r}
#| label: setup
#| echo: false
#| output: false
#| message: false
library(tidyverse)
library(readxl)
library(magrittr)
library(dineq)
library(ineq)
library(ggplot2)
```

# Assignment 1: Data and Descriptive

This assignment aims to obtain, process, and analyze sub-national GDP and population data for a subset of European countries.
The selected subset comprises the UK, Czech Republic, Turkey, and Finland.
The objective is to calculate GDP per capita and explore regional inequity using a range of descriptive statistics and visualizations.

## Part A: Sub-national GDP and GDP per Capita

In the first part, we will dive into sub-national GDP for the selected European countries.
Firstly, a brief overview of the data acquisition will be given.
Furthermore, we will calculate GDP per capita for each sub-region.
Lastly, we will provide a descriptive analysis that gives insights into the distribution and the central tendencies of the data.

### Data Acquisition

The datasets used in this assignment include sub-regional data on GDP and population for the European countries in the subset.
The NUTS classification is a hierarchical system that enables cross-border statistical comparisons at various regional levels within the EU.
In this assignment, we import data at a NUTS 3 level.

We obtained data for Czech Republic, Turkey and Finland from Eurostat.
We downloaded two datasets, one providing GDP data (nama_10r_3gdp) and the other one providing population data (demo_r_pjanaggr3).
We only downloaded data from the year 2000 to 2020.
We needed just a few of the variables included in the two datasets.
After importing the two datasets, we used the select()-function to pick the variables we wanted and gave them some more appropriate names.
We ended up with three variables in each dataset; "year", "geo", and "gdp"/"pop".

```{r}
# GDP data for Czech Republic, Turkey and Finland
gdp_data <- read_csv("nama_10r_3gdp__custom_7667248_linear.csv") |>
  filter(unit == "MIO_EUR") |>
  select(year = TIME_PERIOD, geo, gdp = OBS_VALUE)
```

```{r}
# Population data for Czech Republic, Turkey and Finland
population_data <- read_csv("demo_r_pjanaggr3__custom_7667383_linear.csv") |>
  select(year = TIME_PERIOD, geo, pop = OBS_VALUE)
```

The UK is not included in the datasets from Eurostat, since the country is no longer a part of the European Union.
We got sub-regional GDP and population data for the UK from the Office for National Statistics.
The dataset we downloaded is called "Regional gross domestic product; all ITL regions".
The UK uses another classification system than the European Union.
Instead of NUTS regions, they use ITL regions.
These two classification systems work on the same principle and we will from now on, refer to the regions in the UK as NUTS.

```{r}
# GDP data for UK
gdp_UK <- read_excel("regionalgrossdomesticproductgdpallitlregions.xlsx", 
    sheet = "Table 5", skip = 1)
```

```{r}
# Population data for UK
population_UK <- read_excel("regionalgrossdomesticproductgdpallitlregions.xlsx", 
    sheet = "Table 6", skip = 1)
```

To get the two UK datasets in the same format as the datasets from Eurostat, we used the gather()-function to convert the dataset from wide to long format.
With filter() and mutate() we made a "geo" variable.
We used the select()-function to pick the same variables as we have in the two datasets for the EU countries; "year", "geo", "gdp" and "pop".
Lastly, we sorted the datasets by "geo".

```{r}
# Reforming gdp_UK
gdp_UK <- gdp_UK %>%
  gather(year, gdp, -ITL, -`ITL code`, -`Region name`) %>%
  filter(ITL == "ITL3") %>%
  mutate(geo = `ITL code`) %>%
  select(year, geo, gdp) %>%
  arrange(geo)
```

```{r}
# Reforming population_UK
population_UK <- population_UK %>%
  gather(year, pop, -ITL, -`ITL code`, -`Region name`) %>%
  filter(ITL == "ITL3") %>%
  mutate(geo = `ITL code`) %>%
  select(year, geo, pop) %>%
  arrange(geo)
```

When datasets with GDP and population data for both the EU countries and the UK were in place, we could start merging.
First, we merged the gdp dataset and the population dataset for the EU countries together.
Then, we merged the two datasets for the UK.
Finally, we merged this two new datasets together.
We named the final dataset containing sub-regional GDP and population data for all the countries for "main_dataset".

```{r}
# Merging gdp dataset with population dataset for the EU countries
merged_data <- gdp_data |>
  left_join(population_data, join_by(year,geo))
```

```{r}
# Merging gdp dataset with population dataset for the UK
merged_UK <- gdp_UK |>
  left_join(population_UK, join_by(year,geo))
merged_UK$geo <- gsub("TL", "UK", merged_UK$geo)
```

```{r}
# Converting the "year" variable to a character
merged_data$year <- as.character(merged_data$year)
merged_UK$year <- as.character(merged_UK$year)
```

```{r}
# Merging merged_data with merged_UK to a main dataset
main_data <- full_join(merged_data, merged_UK) 
```

```{r}
# We only want data from year 2000-2020 
main_data <- main_data %>%
  subset(main_data$year >= 2000 & main_data$year <= 2020)
```

```{r}
# Clean up
rm(gdp_data, population_data, gdp_UK, population_UK, merged_data, merged_UK)
```

### GDP per Capita Calculation

Now that our datasets are joined, we can create a new variable for GDP per capita in our main dataset by dividing "gdp" column by the "pop" column.
We do this by taking our main_data and using the mutate() - function, and the formula:

$y_{i} = \frac{GDP_{i}}{Population_{i}}$

```{r}
# Adding GDP per capita in the main_data
main_data <- main_data %>%
  mutate(gdp_per_capita = gdp / pop)
```

### Descriptive Analysis

GDP per capita gives an average representation of the economic well-being of individuals in a country, indicating the amount of economic output generated, by each person.
it is often used as an indicator of the standard living and economic development within a country.

According to the metadata for the population dataset downloaded form Eurostat, the population includes the number of vital events (live births and deaths) in a region each year.
The population is broken down by sex, three age groups (0-14, 15-64 and 65+), and NUTS 3 regions.

The GDP datset from Eurostat contain GDP at current market prices by NUTS 3 regions.
The metadata ...

The metadata for the UK dataset ...

Through descriptive statistic we will summarize and describe the main features and key characteristics of the dataset.
We use the summary() function to get a summary of each variable in the dataset.
The summary contains minimum value, median, mean, quartiles and maximum value, as well as numbers of NA\`s.

```{r}
# minimum, mean, maximum
vt(main_data)
```

We will take a closer look at minimum and maximum value, as well as the mean.
The summary function shows a big difference between minimum and maximum for both gdp and population, which indicates big variation between the different regions.

Standard deviation tells us the amount of variation.

```{r}
# standard deviation
# the column names for which we want to calculate the sd
columns_of_interest <- c("gdp", "pop", "gdp_per_capita")
# Store it in a empty vector
std_deviations <- numeric(length(columns_of_interest))
# Calculating the standard deviation, and removing "NA"
for (i in 1:length(columns_of_interest)) {
  col_name <- columns_of_interest[i]
  std_deviations[i] <- sd(main_data[[col_name]], na.rm = TRUE)
}
# Print the standard deviations
std_deviations
```

gdp = 13428.01

pop = 830187

gdp_per_capita = 0,02497901

## Part B: Regional Inequity

The second part focuses on regional inequality.
We will start with a literate review of the subject, then compute population-weighted GDP Gini coefficients for the regions within our subset of European countries.
This includes data presentation through descriptive statistics and visuals.
In the end, we will discuss the computed Gini coefficients and reflect on the implications of our findings in the context of regional inequity.

### Literature Review

Regional inequality refers to the disparities in economic development, income, and other socio-economic indicators among different geographical regions within a country or across countries.

We should care about regional inequality because it is essential for sustainable and inclusive development in the future.
Regional inequality can have significant social, economic, and political implications.
High levels can lead to issues like unequal distribution of resources, limited social mobility, and even political instability.
Addressing regional inequality is important for ensuring that the benefits of economic growth are shared more equitably among all citizens.
It is all about creating a more balanced and fair society.

### Gini Coefficient Calculation

To compute the population-weighted GDP Gini coefficient for each European NUTS 2 level region within the subset of countries, we used the formula below:

$GINW_j=\frac{1}{2\overline y j} \sum_{i}^{n_j} \sum_{l}^{n_j} \frac{p_i}{P_j} \frac{p_l}{P_j} |y_i - y_l|$

To get the NUTS 2 level using our main dataset with NUTS 3 level we ...

```{r}
main_data_2 <- main_data |>
  mutate(id_nuts3 = geo,
         id_nuts2 = substr(geo, 1,4),
         id_nuts0 = substr(geo, 1, 2)
         )
```

```{r}
main_data_2 <- main_data_2 |>
  filter(pop != "NA") |>
  filter(pop != 0) |>
  filter(gdp_per_capita != "NA") |>
  group_by(id_nuts2, year) |>
  mutate(gini_n2 = gini.wtd(gdp_per_capita, weights = pop)) |>
  ungroup()
```

```{r}
main_data_2 <- main_data_2 %>%
  select(year, id_nuts3, id_nuts2, id_nuts0, gdp, pop, gdp_per_capita, gini_n2, -geo)
```

```{r}
main_data_nuts2 <- main_data_2 |>
 group_by(id_nuts2, year) |>
  slice(1)
```

### Data Presentation

```{r}
# creating a scatterplot
ggplot(data = main_data, aes(x = gdp, y = pop, label = gdp_per_capita)
       ) +
  geom_point(size = 0.1) +
  labs(x = "gdp", y = "pop", title = "scatterplot of gdp and pop") +
  scale_color_brewer(palette = "Set1") +
  theme_minimal()
```

### Discussion
